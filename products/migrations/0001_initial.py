# Generated by Django 2.2.6 on 2019-11-03 11:38

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('users', '0002_auto_20191103_1138'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Category Name')),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Product Name')),
                ('brand', models.CharField(max_length=100, verbose_name='Brand')),
                ('weight', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Weight')),
                ('colour', models.CharField(default='N/A', max_length=30, verbose_name='colour')),
                ('keywords', models.CharField(default='N/A', max_length=200, verbose_name='Keywords')),
                ('country', models.CharField(choices=[('AF', 'AFGHANISTAN'), ('AL', 'ALBANIA'), ('DZ', 'ALGERIA'), ('AS', 'AMERICAN SAMOA'), ('AD', 'ANDORRA'), ('AO', 'ANGOLA'), ('AI', 'ANGUILLA'), ('AQ', 'ANTARCTICA'), ('AG', 'ANTIGUA AND BARBUDA'), ('AR', 'ARGENTINA'), ('AM', 'ARMENIA'), ('AW', 'ARUBA'), ('AU', 'AUSTRALIA'), ('AT', 'AUSTRIA'), ('AZ', 'AZERBAIJAN'), ('BS', 'BAHAMAS'), ('BH', 'BAHRAIN'), ('BD', 'BANGLADESH'), ('BB', 'BARBADOS'), ('BY', 'BELARUS'), ('BE', 'BELGIUM'), ('BZ', 'BELIZE'), ('BJ', 'BENIN'), ('BM', 'BERMUDA'), ('BT', 'BHUTAN'), ('BO', 'BOLIVIA'), ('BA', 'BOSNIA AND HERZEGOVINA'), ('BW', 'BOTSWANA'), ('BV', 'BOUVET ISLAND'), ('BR', 'BRAZIL'), ('IO', 'BRITISH INDIAN OCEAN TERRITORY'), ('BN', 'BRUNEI DARUSSALAM'), ('BG', 'BULGARIA'), ('BF', 'BURKINA FASO'), ('BI', 'BURUNDI'), ('KH', 'CAMBODIA'), ('CM', 'CAMEROON'), ('CA', 'CANADA'), ('CV', 'CAPE VERDE'), ('KY', 'CAYMAN ISLANDS'), ('CF', ' CENTRAL AFRICAN REPUBLIC'), ('TD', 'CHAD'), ('CL', 'CHILE'), ('CN', 'CHINA'), ('CO', 'COLOMBIA'), ('KM', 'COMOROS'), ('CG', 'CONGO'), ('CD', 'DR CONGO'), ('CK', 'COOK ISLANDS'), ('CR', 'COSTA RICA'), ('CI', "CÃ”TE D'IVOIRE"), ('HR', 'CROATIA'), ('CU', 'CUBA'), ('CY', 'CYPRUS'), ('CZ', 'CZECH REPUBLIC'), ('DK', 'DENMARK'), ('DJ', 'DJIBOUTI'), ('DM', 'DOMINICA'), ('DO', 'DOMINICAN REPUBLIC'), ('EC', 'ECUADOR'), ('EG', 'EGYPT'), ('EH', 'WESTERN SAHARA'), ('SV', 'EL SALVADOR'), ('GQ', 'EQUATORIAL GUINEA'), ('ER', 'ERITREA'), ('EE', 'ESTONIA'), ('ET', 'ETHIOPIA'), ('FK', 'FALKLAND ISLANDS'), ('FO', 'FAROE ISLANDS'), ('FJ', 'FIJI'), ('FI', 'FINLAND'), ('FR', 'FRANCE'), ('GA', 'GABON'), ('GM', 'GAMBIA'), ('GE', 'GEORGIA'), ('DE', 'GERMANY'), ('GH', 'GHANA'), ('GI', 'GIBRALTAR'), ('GR', 'GREECE'), ('GL', 'GREENLAND'), ('GD', 'GRENADA'), ('GP', 'GUADELOUPE'), ('GU', 'GUAM'), ('GT', 'GUATEMALA'), ('GN', 'GUINEA'), ('GW', 'GUINEA-BISSAU'), ('GY', 'GUYANA'), ('HT', 'HAITI'), ('HN', 'HONDURAS'), ('HK', 'HONG KONG'), ('HU', 'HUNGARY'), ('IS', 'ICELAND'), ('IN', 'INDIA'), ('ID', 'INDONESIA'), ('IR', 'IRAN'), ('IQ', 'IRAQ'), ('IE', 'IRELAND'), ('IL', 'ISRAEL'), ('IT', 'ITALY'), ('JM', 'JAMAICA'), ('JP', 'JAPAN'), ('JO', 'JORDAN'), ('KZ', 'KAZAKHSTAN'), ('KE', 'KENYA'), ('KI', 'KIRIBATI'), ('KP', 'KOREA'), ('KW', 'KUWAIT'), ('KG', 'KYRGYZSTAN'), ('LA', 'LAO'), ('LV', 'LATVIA'), ('LB', 'LEBANON'), ('LS', 'LESOTHO'), ('LR', 'LIBERIA'), ('LY', 'LIBYA'), ('LI', 'LIECHTENSTEIN'), ('LT', 'LITHUANIA'), ('LU', 'LUXEMBOURG'), ('MO', 'MACAO'), ('MK', 'MACEDONIA'), ('MG', 'MADAGASCAR'), ('MW', 'MALAWI'), ('MY', 'MALAYSIA'), ('MV', 'MALDIVES'), ('ML', 'MALI'), ('MT', 'MALTA'), ('MH', 'MARSHALL ISLANDS'), ('MQ', 'MARTINIQUE'), ('MR', 'MAURITANIA'), ('MU', 'MAURITIUS'), ('YT', 'MAYOTTE'), ('MX', 'MEXICO'), ('FM', 'MICRONESIA'), ('MD', 'MOLDOVA'), ('MC', 'MONACO'), ('MN', 'MONGOLIA'), ('MS', 'MONTSERRAT'), ('MA', 'MOROCCO'), ('MZ', 'MOZAMBIQUE'), ('MM', 'MYANMAR'), ('NA', 'NAMIBIA'), ('NR', 'NAURU'), ('NP', 'NEPAL'), ('NL', 'NETHERLANDS'), ('AN', 'NETHERLANDS ANTILLES'), ('NC', 'NEW CALEDONIA'), ('NZ', 'NEW ZEALAND'), ('NI', 'NICARAGUA'), ('NE', 'NIGER'), ('NG', 'NIGERIA'), ('NU', 'NIUE'), ('NF', 'NORFOLK ISLAND'), ('MP', 'NORTHERN MARIANA ISLANDS'), ('NO', 'NORWAY'), ('OM', 'OMAN'), ('PK', 'PAKISTAN'), ('PW', 'PALAU'), ('PA', 'PANAMA'), ('PG', 'PAPUA NEW GUINEA'), ('PY', 'PARAGUAY'), ('PE', 'PERU'), ('PH', 'PHILIPPINES'), ('PN', 'PITCAIRN'), ('PL', 'POLAND'), ('PT', 'PORTUGAL'), ('PR', 'PUERTO RICO'), ('QA', 'QATAR'), ('RO', 'ROMANIA'), ('RU', 'RUSSIAN FEDERATION'), ('RW', 'RWANDA'), ('SH', 'SAINT HELENA'), ('KN', 'SAINT KITTS AND NEVIS'), ('LC', 'SAINT LUCIA'), ('WS', 'SAMOA'), ('SM', 'SAN MARINO'), ('ST', 'SAO TOME AND PRINCIPE'), ('SA', 'SAUDI ARABIA'), ('SN', 'SENEGAL'), ('CS', 'SERBIA AND MONTENEGRO'), ('SC', 'SEYCHELLES'), ('SL', 'SIERRA LEONE'), ('SG', 'SINGAPORE'), ('SK', 'SLOVAKIA'), ('SI', 'SLOVENIA'), ('SB', 'SOLOMON ISLANDS'), ('SO', 'SOMALIA'), ('ZA', 'SOUTH AFRICA'), ('GS', 'SOUTH GEORGIA AND SOUTH SANDWICH ISLANDS'), ('ES', 'SPAIN'), ('LK', 'SRI LANKA'), ('SD', 'SUDAN'), ('SR', 'SURINAME'), ('SJ', 'SVALBARD AND JAN MAYEN'), ('SZ', 'SWAZILAND'), ('SE', 'SWEDEN'), ('CH', 'SWITZERLAND'), ('TW', 'TAIWAN'), ('TJ', 'TAJIKISTAN'), ('TZ', 'TANZANIA'), ('TH', 'THAILAND'), ('TG', 'TOGO'), ('TK', 'TOKELAU'), ('TO', 'TONGA'), ('TT', 'TRINIDAD AND TOBAGO'), ('TN', 'TUNISIA'), ('TR', 'TURKEY'), ('TM', 'TURKMENISTAN'), ('TV', 'TUVALU'), ('UG', 'UGANDA'), ('UA', 'UKRAINE'), ('AE', 'UNITED ARAB EMIRATES'), ('GB', 'UNITED KINGDOM'), ('US', 'UNITED STATES'), ('UY', 'URUGUAY'), ('UZ', 'UZBEKISTAN'), ('VE', 'VENEZUELA'), ('VU', 'VANUATU'), ('VN', 'VIETNAM'), ('YE', 'YEMEN'), ('ZW', 'ZIMBABWE')], help_text='Add alternative keywords to this product to help in search', max_length=2)),
                ('size', models.CharField(default='N/A', help_text='Size(Lxwxh)', max_length=100, verbose_name='Size')),
                ('youtube_id', models.CharField(default='N/A', max_length=50, verbose_name='Youtube Id')),
                ('description', models.CharField(default='N/A', max_length=500, verbose_name='description')),
                ('higlights', models.CharField(default='N/A', max_length=300, verbose_name='Highlights')),
                ('date_added', models.DateField(default=django.utils.timezone.now, editable=False)),
                ('active', models.BooleanField(default=False)),
                ('battery', models.CharField(default='N/A', help_text='Battery Capacity(mAH)', max_length=20, verbose_name='Battery Capacity (mAH)')),
                ('hdd', models.CharField(default='N/A', help_text='Hard Disk', max_length=100, verbose_name='HardDisk(GB)')),
                ('camera_resolution', models.CharField(default='N/A', help_text='Resolution in Megapixels', max_length=10, verbose_name='Camera Resolution')),
                ('usb', models.CharField(default='N/A', help_text='Eg: Usb c, Usb 3.0', max_length=20, verbose_name='Usb Type')),
                ('ports', models.PositiveIntegerField(default='N/A', verbose_name='Number of Ports')),
                ('sim', models.CharField(choices=[('re', 'Regular Sim'), ('na', 'Nano Sim'), ('mi', 'Micro Sim')], help_text='Sim Slot Size', max_length=2, verbose_name='Sim Size')),
                ('ram', models.CharField(default='N/A', help_text='Random Access Memory', max_length=100, verbose_name='RAM')),
                ('display_size', models.CharField(default='N/A', help_text='Inches', max_length=100, verbose_name='Display Size')),
                ('mainMaterial', models.CharField(blank=True, help_text='Product Material', max_length=30, null=True, verbose_name='Main Material')),
                ('network', models.CharField(default='N/A', help_text='Supported Network', max_length=50, verbose_name='Network Connectivity')),
                ('processor', models.CharField(choices=[('AMD', 'AMD'), ('SA', 'AMD Dual Core'), ('USA', 'AMD Phenom Triple-Core'), ('IN', 'Intel'), ('INA', 'Intel Atom'), ('INC', 'Intel Celeron'), ('IC3', 'Intel Core i3'), ('IC5', 'Intel Core i5'), ('IC7', 'Intel Core i7'), ('IDC', 'Intel Dual Core'), ('IPD', 'Intel Pentium Dual Core'), ('MA', 'Marvell'), ('NV', 'NVIDIA'), ('QDC', 'Qualcomm Dual Core'), ('TI', 'Texas Instrument'), ('VIA', 'VIA')], default='N/A', help_text='Processor Type', max_length=3, verbose_name='Processor Type')),
                ('opticalzoom', models.CharField(default='N/A', help_text='Optical Zoom', max_length=20, verbose_name='Optical Zoom')),
                ('screentechnology', models.CharField(default='N/A', help_text='Screen Technology', max_length=50, verbose_name='Screen Technology')),
                ('internalmemory', models.SmallIntegerField(default='N/A', help_text='Internal Memory', verbose_name='Internal Memory')),
                ('megapixels', models.SmallIntegerField(default='N/A', help_text='Megapixels', verbose_name='Megapixels')),
                ('operatingsystem', models.CharField(choices=[('AND', 'Android'), ('BB7', 'BlackBerry OS 7.0'), ('BB1', 'BlackBerry OS 7.1'), ('BO1', 'Blackberry OS 10'), ('FDO', 'Free DOS'), ('IOS', 'IOS'), ('LIN', 'Linux'), ('MOX', 'Mac OS X'), ('MOS', 'Mobile OS'), ('NOS', 'No OS'), ('NOK', 'Nokia OS'), ('OT', 'Other'), ('SBA', 'Samsung Bada'), ('SYM', 'Symbian'), ('WIN', 'Windows'), ('WI1', 'Windows 10'), ('WI7', 'Windows 7'), ('WI8', 'Windows 8')], default='N/A', help_text='Operating System', max_length=3, verbose_name='Operating System')),
                ('collection', models.CharField(default='N/A', help_text='Name of collection', max_length=50, verbose_name='Collection Family')),
                ('colorfamily', models.CharField(default='N/A', help_text='Color Family of product', max_length=50, verbose_name='Color Family')),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female')], default='N/A', help_text='Gender', max_length=1, verbose_name='Gender')),
                ('sleeve', models.CharField(default='N/A', help_text='Sleeve Length', max_length=50, verbose_name='Sleeve Length')),
                ('skirt', models.CharField(default='N/A', help_text='Skirt Type', max_length=50, verbose_name='Skirt Type')),
                ('age_group', models.CharField(default='N/A', help_text='Age Group', max_length=50, verbose_name='Age Group')),
                ('season', models.CharField(default='N/A', help_text='Skirt Type', max_length=50, verbose_name='Skirt Type')),
                ('author', models.CharField(default='N/A', help_text="Author's Name", max_length=100, verbose_name='Author')),
                ('isbn', models.CharField(default='N/A', help_text='ISBN', max_length=100, verbose_name='ISBN')),
                ('pages', models.PositiveIntegerField(default='N/A', help_text='Number of Pages', verbose_name='Pages')),
                ('language', models.CharField(default='N/A', help_text='Language', max_length=50, verbose_name='Language')),
                ('pub_year', models.CharField(default='N/A', help_text='Publication Year', max_length=4, verbose_name='Publication Year')),
                ('edition', models.CharField(default='N/A', help_text='Edition', max_length=20, verbose_name='Edition')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.Category')),
                ('sold_by', models.OneToOneField(editable=False, on_delete=django.db.models.deletion.CASCADE, to='users.Profile')),
            ],
            options={
                'verbose_name_plural': 'Products',
            },
        ),
        migrations.CreateModel(
            name='Variations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('variation', models.CharField(blank=True, choices=[('AF', 'AFGHANISTAN'), ('AL', 'ALBANIA'), ('DZ', 'ALGERIA'), ('AS', 'AMERICAN SAMOA'), ('AD', 'ANDORRA'), ('AO', 'ANGOLA'), ('AI', 'ANGUILLA'), ('AQ', 'ANTARCTICA'), ('AG', 'ANTIGUA AND BARBUDA'), ('AR', 'ARGENTINA'), ('AM', 'ARMENIA'), ('AW', 'ARUBA'), ('AU', 'AUSTRALIA'), ('AT', 'AUSTRIA'), ('AZ', 'AZERBAIJAN'), ('BS', 'BAHAMAS'), ('BH', 'BAHRAIN'), ('BD', 'BANGLADESH'), ('BB', 'BARBADOS'), ('BY', 'BELARUS'), ('BE', 'BELGIUM'), ('BZ', 'BELIZE'), ('BJ', 'BENIN'), ('BM', 'BERMUDA'), ('BT', 'BHUTAN'), ('BO', 'BOLIVIA'), ('BA', 'BOSNIA AND HERZEGOVINA'), ('BW', 'BOTSWANA'), ('BV', 'BOUVET ISLAND'), ('BR', 'BRAZIL'), ('IO', 'BRITISH INDIAN OCEAN TERRITORY'), ('BN', 'BRUNEI DARUSSALAM'), ('BG', 'BULGARIA'), ('BF', 'BURKINA FASO'), ('BI', 'BURUNDI'), ('KH', 'CAMBODIA'), ('CM', 'CAMEROON'), ('CA', 'CANADA'), ('CV', 'CAPE VERDE'), ('KY', 'CAYMAN ISLANDS'), ('CF', ' CENTRAL AFRICAN REPUBLIC'), ('TD', 'CHAD'), ('CL', 'CHILE'), ('CN', 'CHINA'), ('CO', 'COLOMBIA'), ('KM', 'COMOROS'), ('CG', 'CONGO'), ('CD', 'DR CONGO'), ('CK', 'COOK ISLANDS'), ('CR', 'COSTA RICA'), ('CI', "CÃ”TE D'IVOIRE"), ('HR', 'CROATIA'), ('CU', 'CUBA'), ('CY', 'CYPRUS'), ('CZ', 'CZECH REPUBLIC'), ('DK', 'DENMARK'), ('DJ', 'DJIBOUTI'), ('DM', 'DOMINICA'), ('DO', 'DOMINICAN REPUBLIC'), ('EC', 'ECUADOR'), ('EG', 'EGYPT'), ('EH', 'WESTERN SAHARA'), ('SV', 'EL SALVADOR'), ('GQ', 'EQUATORIAL GUINEA'), ('ER', 'ERITREA'), ('EE', 'ESTONIA'), ('ET', 'ETHIOPIA'), ('FK', 'FALKLAND ISLANDS'), ('FO', 'FAROE ISLANDS'), ('FJ', 'FIJI'), ('FI', 'FINLAND'), ('FR', 'FRANCE'), ('GA', 'GABON'), ('GM', 'GAMBIA'), ('GE', 'GEORGIA'), ('DE', 'GERMANY'), ('GH', 'GHANA'), ('GI', 'GIBRALTAR'), ('GR', 'GREECE'), ('GL', 'GREENLAND'), ('GD', 'GRENADA'), ('GP', 'GUADELOUPE'), ('GU', 'GUAM'), ('GT', 'GUATEMALA'), ('GN', 'GUINEA'), ('GW', 'GUINEA-BISSAU'), ('GY', 'GUYANA'), ('HT', 'HAITI'), ('HN', 'HONDURAS'), ('HK', 'HONG KONG'), ('HU', 'HUNGARY'), ('IS', 'ICELAND'), ('IN', 'INDIA'), ('ID', 'INDONESIA'), ('IR', 'IRAN'), ('IQ', 'IRAQ'), ('IE', 'IRELAND'), ('IL', 'ISRAEL'), ('IT', 'ITALY'), ('JM', 'JAMAICA'), ('JP', 'JAPAN'), ('JO', 'JORDAN'), ('KZ', 'KAZAKHSTAN'), ('KE', 'KENYA'), ('KI', 'KIRIBATI'), ('KP', 'KOREA'), ('KW', 'KUWAIT'), ('KG', 'KYRGYZSTAN'), ('LA', 'LAO'), ('LV', 'LATVIA'), ('LB', 'LEBANON'), ('LS', 'LESOTHO'), ('LR', 'LIBERIA'), ('LY', 'LIBYA'), ('LI', 'LIECHTENSTEIN'), ('LT', 'LITHUANIA'), ('LU', 'LUXEMBOURG'), ('MO', 'MACAO'), ('MK', 'MACEDONIA'), ('MG', 'MADAGASCAR'), ('MW', 'MALAWI'), ('MY', 'MALAYSIA'), ('MV', 'MALDIVES'), ('ML', 'MALI'), ('MT', 'MALTA'), ('MH', 'MARSHALL ISLANDS'), ('MQ', 'MARTINIQUE'), ('MR', 'MAURITANIA'), ('MU', 'MAURITIUS'), ('YT', 'MAYOTTE'), ('MX', 'MEXICO'), ('FM', 'MICRONESIA'), ('MD', 'MOLDOVA'), ('MC', 'MONACO'), ('MN', 'MONGOLIA'), ('MS', 'MONTSERRAT'), ('MA', 'MOROCCO'), ('MZ', 'MOZAMBIQUE'), ('MM', 'MYANMAR'), ('NA', 'NAMIBIA'), ('NR', 'NAURU'), ('NP', 'NEPAL'), ('NL', 'NETHERLANDS'), ('AN', 'NETHERLANDS ANTILLES'), ('NC', 'NEW CALEDONIA'), ('NZ', 'NEW ZEALAND'), ('NI', 'NICARAGUA'), ('NE', 'NIGER'), ('NG', 'NIGERIA'), ('NU', 'NIUE'), ('NF', 'NORFOLK ISLAND'), ('MP', 'NORTHERN MARIANA ISLANDS'), ('NO', 'NORWAY'), ('OM', 'OMAN'), ('PK', 'PAKISTAN'), ('PW', 'PALAU'), ('PA', 'PANAMA'), ('PG', 'PAPUA NEW GUINEA'), ('PY', 'PARAGUAY'), ('PE', 'PERU'), ('PH', 'PHILIPPINES'), ('PN', 'PITCAIRN'), ('PL', 'POLAND'), ('PT', 'PORTUGAL'), ('PR', 'PUERTO RICO'), ('QA', 'QATAR'), ('RO', 'ROMANIA'), ('RU', 'RUSSIAN FEDERATION'), ('RW', 'RWANDA'), ('SH', 'SAINT HELENA'), ('KN', 'SAINT KITTS AND NEVIS'), ('LC', 'SAINT LUCIA'), ('WS', 'SAMOA'), ('SM', 'SAN MARINO'), ('ST', 'SAO TOME AND PRINCIPE'), ('SA', 'SAUDI ARABIA'), ('SN', 'SENEGAL'), ('CS', 'SERBIA AND MONTENEGRO'), ('SC', 'SEYCHELLES'), ('SL', 'SIERRA LEONE'), ('SG', 'SINGAPORE'), ('SK', 'SLOVAKIA'), ('SI', 'SLOVENIA'), ('SB', 'SOLOMON ISLANDS'), ('SO', 'SOMALIA'), ('ZA', 'SOUTH AFRICA'), ('GS', 'SOUTH GEORGIA AND SOUTH SANDWICH ISLANDS'), ('ES', 'SPAIN'), ('LK', 'SRI LANKA'), ('SD', 'SUDAN'), ('SR', 'SURINAME'), ('SJ', 'SVALBARD AND JAN MAYEN'), ('SZ', 'SWAZILAND'), ('SE', 'SWEDEN'), ('CH', 'SWITZERLAND'), ('TW', 'TAIWAN'), ('TJ', 'TAJIKISTAN'), ('TZ', 'TANZANIA'), ('TH', 'THAILAND'), ('TG', 'TOGO'), ('TK', 'TOKELAU'), ('TO', 'TONGA'), ('TT', 'TRINIDAD AND TOBAGO'), ('TN', 'TUNISIA'), ('TR', 'TURKEY'), ('TM', 'TURKMENISTAN'), ('TV', 'TUVALU'), ('UG', 'UGANDA'), ('UA', 'UKRAINE'), ('AE', 'UNITED ARAB EMIRATES'), ('GB', 'UNITED KINGDOM'), ('US', 'UNITED STATES'), ('UY', 'URUGUAY'), ('UZ', 'UZBEKISTAN'), ('VE', 'VENEZUELA'), ('VU', 'VANUATU'), ('VN', 'VIETNAM'), ('YE', 'YEMEN'), ('ZW', 'ZIMBABWE')], help_text='Variation', max_length=2, null=True, verbose_name='Variation')),
                ('sku', models.CharField(help_text='Stock Keeping Unit', max_length=70, verbose_name='Stock Keeping Unit')),
                ('identification', models.CharField(blank=True, help_text='ISBN/EAN/UPC', max_length=100, null=True, verbose_name='ISBN/UPC/EAN')),
                ('quantity', models.PositiveIntegerField(blank=True, help_text='Quantity In Stock', null=True, verbose_name='Quantity')),
                ('price', models.DecimalField(decimal_places=2, help_text='Price', max_digits=10, verbose_name='Price')),
                ('saleprice', models.DecimalField(blank=True, decimal_places=2, help_text='Sale Price', max_digits=10, null=True, verbose_name='Sale Price')),
                ('salestart', models.DateField(blank=True, help_text='Sale Start Date', null=True, verbose_name='Sale Start')),
                ('salestop', models.DateField(blank=True, help_text='Sale End Date', null=True, verbose_name='Sale End')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.Product')),
            ],
            options={
                'verbose_name_plural': 'Variations',
            },
        ),
        migrations.CreateModel(
            name='Subcategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Subcategory Name')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.Category')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='subcategory',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='products.Subcategory'),
        ),
    ]
